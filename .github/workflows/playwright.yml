name: Playwright Tests - Scheduled with Telegram Alerts

on:
  schedule:
    - cron: '0 6 * * 4'  # Every Thursday 12PM BDT (6AM UTC)
  workflow_dispatch:      # Allow manual triggering

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      # Standard Playwright setup
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - run: npm ci
      - run: npx playwright install --with-deps
      
      # Run tests and capture detailed output
      # Fixed output processing to handle the format correctly and avoid 'Invalid format' errors
      - name: Run tests
        id: run-tests
        run: |
          npx playwright test | tee test-output.txt || true
          # Extract summary safely
          SUMMARY=$(cat test-output.txt | grep -E '[0-9]+ passed.*[0-9]+s' | tail -1 || echo "Test completed")
          echo "summary=$SUMMARY" >> $GITHUB_OUTPUT
          echo "workflow_name=Playwright Tests" >> $GITHUB_OUTPUT
          
          # Extract test names and results more reliably
          TEST_NAMES=$(cat test-output.txt | grep -E '‚úì.*\[.*\]' | sed -E 's/^[^\[]*\[(.*?)\].*‚Ä∫ (.*)/\1: \2/' | tr '\n' ',' | sed 's/,$//' || echo "No tests found")
          echo "test_names=$TEST_NAMES" >> $GITHUB_OUTPUT
          
          # Extract counts safely with defaults
          # Use awk to extract numbers more reliably
          PASSED=$(cat test-output.txt | grep -E '[0-9]+ passed' | awk '{for(i=1;i<=NF;i++) if($i ~ /^[0-9]+$/) {print $i; exit}}' || echo "0")
          FAILED=$(cat test-output.txt | grep -E '[0-9]+ failed' | awk '{for(i=1;i<=NF;i++) if($i ~ /^[0-9]+$/) {print $i; exit}}' || echo "0")
          SKIPPED=$(cat test-output.txt | grep -E '[0-9]+ skipped' | awk '{for(i=1;i<=NF;i++) if($i ~ /^[0-9]+$/) {print $i; exit}}' || echo "0")
          
          # Set default values if empty
          [ -z "$PASSED" ] && PASSED="0"
          [ -z "$FAILED" ] && FAILED="0"
          [ -z "$SKIPPED" ] && SKIPPED="0"
          
          echo "passed_count=$PASSED" >> $GITHUB_OUTPUT
          echo "failed_count=$FAILED" >> $GITHUB_OUTPUT
          echo "skipped_count=$SKIPPED" >> $GITHUB_OUTPUT
      
      # Upload HTML report
      - uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 7

      # Telegram notification with rich formatting
      - name: Notify Telegram
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_CHAT }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: |
            *üöÄ Playwright Test Results*
            ‚ñ´Ô∏è *Repo:* ${{ github.repository }}
            ‚ñ´Ô∏è *Workflow:* ${{ steps.run-tests.outputs.workflow_name }}
            ‚ñ´Ô∏è *Status:* ${{ job.status }}
            ‚ñ´Ô∏è *Trigger:* ${{ github.event_name }}
            
            *üìä Test Results:*
            ‚úÖ *Passed:* ${{ steps.run-tests.outputs.passed_count || '0' }}
            ‚ùå *Failed:* ${{ steps.run-tests.outputs.failed_count || '0' }}
            ‚è≠Ô∏è *Skipped:* ${{ steps.run-tests.outputs.skipped_count || '0' }}
            
            *üß™ Tests:*
            ${{ steps.run-tests.outputs.test_names }}
            
            *üìù Summary:* 
            ${{ steps.run-tests.outputs.summary }}

            
        if: always()
        
      # Slack notification
      - name: Send Slack Notification
        uses: slackapi/slack-github-action@v1.24.0
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        with:
          payload: |
            {
              "text": "üîî Playwright Test Results: ${{ job.status }}",
              "blocks": [
                {
                  "type": "header",
                  "text": {
                    "type": "plain_text",
                    "text": "üöÄ Playwright Test Results",
                    "emoji": true
                  }
                },
                {
                  "type": "section",
                  "fields": [
                    {
                      "type": "mrkdwn",
                      "text": "*Repository:*\n${{ github.repository }}"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*Workflow:*\n${{ steps.run-tests.outputs.workflow_name }}"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*Status:*\n${{ job.status }}"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*Trigger:*\n${{ github.event_name }}"
                    }
                  ]
                },
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "*Test Results:*"
                  }
                },
                {
                  "type": "section",
                  "fields": [
                    {
                      "type": "mrkdwn",
                      "text": "‚úÖ *Passed:*\n${{ steps.run-tests.outputs.passed_count || '0' }}"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "‚ùå *Failed:*\n${{ steps.run-tests.outputs.failed_count || '0' }}"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "‚è≠Ô∏è *Skipped:*\n${{ steps.run-tests.outputs.skipped_count || '0' }}"
                    }
                  ]
                },
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "*Tests:*\n${{ steps.run-tests.outputs.test_names }}"
                  }
                },
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "*Summary:*\n${{ steps.run-tests.outputs.summary }}"
                  }
                },
                {
                  "type": "actions",
                  "elements": [
                    {
                      "type": "button",
                      "text": {
                        "type": "plain_text",
                        "text": "View Report",
                        "emoji": true
                      },
                      "url": "https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
                    },
                    {
                      "type": "button",
                      "text": {
                        "type": "plain_text",
                        "text": "Download Artifacts",
                        "emoji": true
                      },
                      "url": "https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}#artifacts"
                    }
                  ]
                }
              ]
            }
        if: always()